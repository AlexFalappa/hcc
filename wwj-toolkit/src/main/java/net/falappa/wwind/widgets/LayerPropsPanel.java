package net.falappa.wwind.widgets;

import gov.nasa.worldwind.WorldWindow;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JSlider;
import net.falappa.wwind.layers.SingleMarkerLayer;
import net.falappa.wwind.layers.SingleSurfShapeLayer;
import net.falappa.wwind.layers.SurfShapeLayer;
import net.falappa.wwind.utils.ToggleVisibilityAction;

/**
 * Small panel to show a {@link SurfShapeLayer} name and edit its visibility, color and opacity.
 * <p>
 * Can also be used to control a pair of {@link SingleSurfShapeLayer} and {@link SingleMarkerLayer} (e.g. WWindPanel AOI).
 *
 * @see SurfShapeLayersVisibilityPanel
 * @author Alessandro Falappa
 */
public class LayerPropsPanel extends javax.swing.JPanel {

    private WorldWindow wwd;
    private SurfShapeLayer sl;
    private SingleSurfShapeLayer sssl;
    private SingleMarkerLayer sml;

    public LayerPropsPanel(WorldWindow wwnd, SurfShapeLayer layer) {
        initComponents();
        this.sl = layer;
        this.wwd = wwnd;
        chLayerName.setSelected(layer.isEnabled());
        chLayerName.setAction(new ToggleVisibilityAction(layer, wwnd));
        ccbColor.setSelectedColor(layer.getColor());
        // NOTE: event listener added after selection to prevent loop
        ccbColor.addItemListener(new java.awt.event.ItemListener() {
            @Override
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sl.setColor(ccbColor.getSelectedColor());
                wwd.redraw();
            }
        });
    }

    public LayerPropsPanel(WorldWindow wwnd, SingleSurfShapeLayer sslayer, SingleMarkerLayer mlayer) {
        initComponents();
        this.sssl = sslayer;
        this.sml = mlayer;
        this.wwd = wwnd;
        chLayerName.setSelected(sslayer.isEnabled());
        chLayerName.setText("AOI");
        chLayerName.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                sssl.setEnabled(chLayerName.isSelected());
                sml.setEnabled(chLayerName.isSelected());
            }
        });
        ccbColor.setSelectedColor(sslayer.getColor());
        // NOTE: event listener added after selection to prevent loop
        ccbColor.addItemListener(new java.awt.event.ItemListener() {
            @Override
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sssl.setColor(ccbColor.getSelectedColor());
                sml.setColor(ccbColor.getSelectedColor());
                wwd.redraw();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chLayerName = new javax.swing.JCheckBox();
        ccbColor = new net.falappa.swing.combobox.colorbox.ColorComboBox();
        slOpacity = new javax.swing.JSlider();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 9, 3));

        chLayerName.setText("layer name");

        slOpacity.setMinimum(10);
        slOpacity.setValue(100);
        slOpacity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slOpacityStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(chLayerName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(ccbColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(slOpacity, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chLayerName)
                    .addComponent(ccbColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slOpacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void slOpacityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slOpacityStateChanged
        JSlider source = (JSlider) evt.getSource();
        double val = ((double) source.getValue()) / ((double) source.getMaximum());
        if (sl != null) {
            sl.setOpacity(val);
        } else {
            sssl.setOpacity(val);
            sml.setOpacity(val);
        }
        wwd.redraw();
    }//GEN-LAST:event_slOpacityStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private net.falappa.swing.combobox.colorbox.ColorComboBox ccbColor;
    private javax.swing.JCheckBox chLayerName;
    private javax.swing.JSlider slOpacity;
    // End of variables declaration//GEN-END:variables
}
